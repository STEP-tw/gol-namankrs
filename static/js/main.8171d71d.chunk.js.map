{"version":3,"sources":["_src/gameOfLife.js","_src/lib.js","Cell.js","App.js","serviceWorker.js","index.js"],"names":["generateInstances","require","generateIsBetween","lowerLimit","upperLimit","candidate","initialiseState","currentState","bounds","mapper","_ref","_ref2","Object","_home_travis_build_STEP_tw_gol_namankrs_gol_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","x","y","topLeft","bind","map","parser","currentGeneration","length","bottomRight","breadth","states","isWithinLength","isWithinBreadth","filter","_ref5","_ref6","validateStates","module","exports","nextGeneration","currGeneration","_parser","nextState","board","result","row","col","push","deParser","_ref3","_ref4","generateBoard","Array","fill","validateNeighbours","neighbours","validateInputs","inputs","getLifeCount","validNeighbours","neighbour","initialiseBoard","initialStates","grid","slice","index","getNeighbours","rowIndex","columnIndex","points","forEach","destiny","lifeCount","state","living","dead","makeInstance","_ref7","_ref8","resultBoard","aliveNeighboursCount","cycleGenerator","currentBoard","column","generation","genCount","makeBoard","finalBoard","join","upperBoundary","pop","lowerBoundary","unshift","addBoundary","handleStates","width","height","split","generateInitialBoard","Cell","react_default","a","createElement","this","props","color","stroke","strokeWidth","Component","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gen","_this2","timerID","setInterval","tick","setState","cells","colors","i","j","src_Cell","concat","genCells","cell","toColourLookup","className","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8171d71d.chunk.js","sourcesContent":["let {generateInstances} = require(\"./lib.js\");\nconst generateIsBetween = function(lowerLimit,upperLimit){\n  return function(candidate){\n    return candidate>lowerLimit && candidate<upperLimit;\n  }\n}\n\nconst boundMapper = function(bounds,[x,y]){\n  return [x-bounds.topLeft[0],y-bounds.topLeft[1]];\n}\n\nconst reverseBoundMapper = function(bounds,[x,y]){\n  return [x+bounds.topLeft[0],y+bounds.topLeft[1]];\n}\n\nconst initialiseState = function(currentState,bounds){\n  let mapper = boundMapper.bind(null,bounds);\n  return currentState.map(mapper);\n}\n\nconst validateStates = function(states,length,breadth){\n  let isWithinLength = generateIsBetween(-1,length);\n  let isWithinBreadth = generateIsBetween(-1,breadth);\n  let validStates = states.filter(([x,y])=>isWithinBreadth(x) && isWithinLength(y));\n  return validStates;\n}\n\nconst parser =  function(currentGeneration,bounds){\n  let length = bounds.bottomRight[1]-bounds.topLeft[1] +1;\n  let breadth = bounds.bottomRight[0] - bounds.topLeft[0] +1;\n  let allStates = initialiseState(currentGeneration,bounds);\n  let validStates = validateStates(allStates,length,breadth);\n  return {length:length,breadth:breadth,states:validStates}\n}\n\nconst deParser = function(board){\n  let result = [];\n  for(let row=0; row<board.length; row++){\n    for(let col=0; col<board[0].length; col++){\n      if(board[row][col] == \"*\")\n        result.push([row,col]);\n   }\n  }\n  return result;\n}\n\nconst nextGeneration = function(currGeneration,bounds) {\n  let {length,breadth,states} = parser(currGeneration,bounds);\n  let nextBoard = generateInstances(length,breadth,states,1);\n  let nextState = deParser(nextBoard);\n  let mapper = reverseBoundMapper.bind(null,bounds);\n  return nextState.map(mapper);\n}\nmodule.exports = { nextGeneration };\n","const generateBoard = function(length,breadth){\n  return new Array(breadth).fill().map(x=>new Array(length).fill().map(x=>\" \"));\n}\n\nconst generateIsBetween = function(lowerLimit,upperLimit){\n  return function(candidate){\n    return candidate>lowerLimit && candidate<upperLimit;\n  }\n}\n\nconst validateNeighbours = function(neighbours,length,breadth){\n  let isWithinLength = generateIsBetween(-1,length);\n  let isWithinBreadth = generateIsBetween(-1,breadth);\n  let validNeighbours = neighbours.filter(([x,y])=>isWithinBreadth(x) && isWithinLength(y));\n  return validNeighbours;\n}\n\nconst validateInputs = function(inputs,length,breadth){\n  let isWithinLength = generateIsBetween(-1,length);\n  let isWithinBreadth = generateIsBetween(-1,breadth);\n  let validInputs = inputs.filter(([x,y])=>isWithinBreadth(x) && isWithinLength(y));\n  return validInputs;\n}\n\n\nconst getLifeCount = function(board,validNeighbours){\n  let lifeCount = 0;\n  const isNeighbourValid = function(neighbour){\n    return board[neighbour[0]][neighbour[1]] == \"*\";\n  }\n\n  let lifeBoard = validNeighbours.filter(isNeighbourValid);\n  return lifeBoard.length;\n}\n\nconst initialiseBoard = function(board,initialStates){\n  let grid = board.slice(\"\");\n\n  for(let index=0; index<initialStates.length; index++){ \n    grid[initialStates[index][0]][initialStates[index][1]] = \"*\";\n  }\n  return grid;\n}\n\nconst getNeighbours = function([rowIndex,columnIndex]){\n  let points = [-1, 0, 1];\n  let neighbours = [];\n  points.forEach((x)=> {\n    points.forEach((y) =>{\n      if(x!=0 ||  y!=0)\n        neighbours.push([rowIndex+x, columnIndex+y]);\n    });\n  });\n\n  return neighbours;\n}\nconst destiny = function(lifeCount,state){\n  let states = { living : [\" \",\" \",\"*\",\"*\",\" \",\" \",\" \",\" \",\" \"], \n    dead : [\" \",\" \",\" \",\"*\",\" \",\" \",\" \",\" \",\" \"]}\n\n  return states[state][lifeCount];\n}\n\nconst makeInstance = function(length,breadth,[row,col],board){\n  let resultBoard = board.map(x=>x.slice());\n  let neighbours = getNeighbours([row,col]);\n  neighbours = validateNeighbours(neighbours,length,breadth);\n  let aliveNeighboursCount = getLifeCount(resultBoard,neighbours);\n\n  let state = \"dead\";\n  if(resultBoard[row][col] == \"*\")\n    state = \"living\";\n\n return destiny(aliveNeighboursCount,state);\n}\n\nconst cycleGenerator = function(length,breadth,board){\n  let currentBoard = board.map(x=>x.slice());\n  for(let row=0; row<breadth; row++){\n     for(let column=0; column<length; column++){\n      currentBoard[row][column] = makeInstance(length,breadth,[row,column],board);\n    }\n  }\n  return currentBoard;\n}\n\nconst generateInstances = function(length,breadth,initialStates,generation){\n  let board = generateBoard(length,breadth);\n  board = initialiseBoard(board,initialStates);\n  let resultBoard = board.map(x=>x.slice());\n\n  for(let genCount=0; genCount<generation; genCount++){\n    resultBoard = cycleGenerator(length,breadth,resultBoard);\n  }\n  return resultBoard;\n}\n\nconst addBoundary = function(board,length){\n  let upperBoundary = new Array(length).fill('----');\n  upperBoundary.pop(); upperBoundary.push('---');\n  upperBoundary = upperBoundary.join('');\n  upperBoundary = '|'+upperBoundary+'|';\n\n  let lowerBoundary = new Array(length).fill('----');\n  lowerBoundary.pop(); lowerBoundary.push('---');\n  lowerBoundary = lowerBoundary.join(''); \n  lowerBoundary = '|'+lowerBoundary+'|';\n\n  board.push(lowerBoundary); board.unshift(upperBoundary);\n  return board;\n}\n\nconst makeBoard = function(board){\n  let finalBoard = board.map(x=>x.join(\"   \"));\n  finalBoard = finalBoard.map(x=>'| '+x+' |');\n  finalBoard = addBoundary(finalBoard,board[0].length);\n  return finalBoard ;\n}\n\nconst handleStates = function(states,width,height){\nlet initialStates = states.split(' ').map(x=>x.split(',').map(y=>+y));\nreturn validateInputs(initialStates,width,height);\n}\n\nconst generateInitialBoard = function(length,breadth,initialStates){\n  let board = generateBoard(length,breadth);\n  return initialiseBoard(board,initialStates);\n}\n\nmodule.exports = {generateBoard,validateNeighbours,getLifeCount,\n  initialiseBoard,getNeighbours,destiny,generateInstances,\n  makeBoard,validateInputs,handleStates,cycleGenerator,\n  generateInitialBoard}\n","import React, { Component } from 'react';\n\nclass Cell extends Component {\n  render() {\n    return <rect width=\"10\" \n    height=\"10\"\n    fill={this.props.color || \"white\"}\n    x={this.props.col*10} \n    y={this.props.row*10} \n    stroke=\"lightgray\" \n    strokeWidth={1}></rect>\n  }\n}\n\nexport default Cell;","import React, { Component } from 'react';\nimport Cell from './Cell';\nconst {nextGeneration} = require('./_src/gameOfLife.js');\n\nconst genId = (a) => a.join(\"_\");\n\nconst genCells = (colors) => {\n  let cells = [];\n  for(let i=0;i<17;i++) {\n    for(let j=0;j<17;j++) {\n      cells.push(<Cell row={i} col={j} color={colors[`${i}_${j}`]}/>);\n    }\n  }\n  return cells;\n}\n\nconst toColourLookup=(cells) => {\n  let colors={};\n  cells.forEach(cell => {\n    colors[genId(cell)]=\"black\"\n  });\n  return colors;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {gen: this.props.gen};\n  }\n  componentDidMount() {\n    this.timerID = setInterval(()=>this.tick(),180)\n  }\n  tick() {\n    this.setState((state,props)=>{\n      let newState=nextGeneration(state.gen,{topLeft:[0,0],bottomRight:[17,17]});\n      return {gen:newState};\n    });\n  }\n  render() {\n    let colors=toColourLookup(this.state.gen)\n    let cells=genCells(colors);\n    return (\n      <div className=\"App\">\n        <svg width={800} height={800}>\n          {cells}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst coords=[ [ 1, 5 ],\n[ 1, 11 ],\n[ 2, 5 ],\n[ 2, 11 ],\n[ 3, 5 ],\n[ 3, 6 ],\n[ 3, 10 ],\n[ 3, 11 ],\n[ 5, 1 ],\n[ 5, 2 ],\n[ 5, 3 ],\n[ 5, 6 ],\n[ 5, 7 ],\n[ 5, 9 ],\n[ 5, 10 ],\n[ 5, 13 ],\n[ 5, 14 ],\n[ 5, 15 ],\n[ 6, 3 ],\n[ 6, 5 ],\n[ 6, 7 ],\n[ 6, 9 ],\n[ 6, 11 ],\n[ 6, 13 ],\n[ 7, 5 ],\n[ 7, 6 ],\n[ 7, 10 ],\n[ 7, 11 ],\n[ 9, 5 ],\n[ 9, 6 ],\n[ 9, 10 ],\n[ 9, 11 ],\n[ 10, 3 ],\n[ 10, 5 ],\n[ 10, 7 ],\n[ 10, 9 ],\n[ 10, 11 ],\n[ 10, 13 ],\n[ 11, 1 ],\n[ 11, 2 ],\n[ 11, 3 ],\n[ 11, 6 ],\n[ 11, 7 ],\n[ 11, 9 ],\n[ 11, 10 ],\n[ 11, 13 ],\n[ 11, 14 ],\n[ 11, 15 ],\n[ 13, 5 ],\n[ 13, 6 ],\n[ 13, 10 ],\n[ 13, 11 ],\n[ 14, 5 ],\n[ 14, 11 ],\n[ 15, 5 ],\n[ 15, 11 ] ];\nReactDOM.render(<App gen={coords}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}